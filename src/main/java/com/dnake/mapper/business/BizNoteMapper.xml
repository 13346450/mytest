<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dnake.mapper.business.BizNoteMapper">
	<resultMap type="BizNote" id="bizNoteMap">
		<id column="id_key" property="idKey" />
		<result column="order_id" property="orderId" />
		<result column="note_title" property="noteTitle" />
		<result column="note_type" property="noteType" />
		<result column="note_content" property="noteContent" />
		<result column="last_reply_dt" property="lastReplyDt" />
		<result column="publish_dt" property="publishDt" />
		<result column="reply_count" property="replyCount" />
		<result column="clicks_count" property="clicksCount" />
		<result column="is_elite" property="isElite" />
		<result column="is_top" property="isTop" />
		<result column="no_reply" property="noReply" />
		<result column="images_url" property="imagesUrl" />
		<result column="user_id" property="userId" />
		<result column="community_id" property="communityId" />

	</resultMap>

	<resultMap type="BizNoteVO" id="bizNoteList">
		<id column="id_key" property="idKey" />
		<result column="order_id" property="orderId" />
		<result column="note_title" property="noteTitle" />
		<result column="note_type" property="noteType" />
		<result column="note_content" property="noteContent" />
		<result column="last_reply_dt" property="lastReplyDt" />
		<result column="publish_dt" property="publishDt" />
		<result column="reply_count" property="replyCount" />
		<result column="clicks_count" property="clicksCount" />
		<result column="is_elite" property="isElite" />
		<result column="is_top" property="isTop" />
		<result column="no_reply" property="noReply" />
		<result column="images_url" property="imagesUrl" />
		<result column="user_id" property="userId" />
		<result column="community_id" property="communityId" />

		<result column="community_name" property="communityName" />
		<result column="note_type_name" property="noteTypeName" />
		<result column="user_name" property="userName" />
	</resultMap>

	<!-- 更新帖子信息 -->
	<update id="update" parameterType="BizNote">
		update biz_note
		<set>
			order_id = #{orderId},
			note_title = #{noteTitle},
			note_type =
			#{noteType},
			note_content = #{noteContent},
			last_reply_dt =
			#{lastReplyDt},
			publish_dt = #{publishDt},
			reply_count = #{replyCount},
			clicks_count = #{clicksCount},
			is_elite = #{isElite},
			is_top =
			#{isTop},
			no_reply = #{noReply}
			images_url = #{imagesUrl}
			user_id =
			#{userId}
			community_id = #{communityId}
		</set>
		where id_key = #{idKey}
	</update>
	<!-- 删除帖子信息 -->
	<delete id="delete" parameterType="java.lang.Long">
		delete from biz_note where
		id_key = #{idKey}
	</delete>
	<!-- 插入帖子信息 -->
	<insert id="insert" parameterType="BizNote" useGeneratedKeys="true"
		keyProperty="idKey">
		insert into biz_note
		(note_title, note_type, note_content,
		user_id,
		community_id, publish_dt)
		values
		(#{noteTitle}, #{noteType},
		#{noteContent}, #{userId}, #{communityId}, #{publishDt})
	</insert>
	<!-- 根据ID查找帖子信息 -->
	<select id="queryById" parameterType="java.lang.Long" resultMap="bizNoteList">
		select a.*, b.cd_nm as user_name, c.cu_name as community_name,
		d.category_name as note_type_name
		from biz_note a
		LEFT JOIN sys_user b
		on a.user_id = b.id_key
		LEFT JOIN sys_community c on a.community_id =
		c.id_key
		LEFT JOIN biz_category d on a.note_type = d.id_key
		<where>
			a.id_key = #{idKey}
		</where>
	</select>
	<!-- 分页查询 -->
	<select id="queryPage" parameterType="Page" resultMap="bizNoteList">
		select a.*, b.cd_nm as user_name, c.cu_name as community_name,
		d.category_name as note_type_name
		from biz_note a
		LEFT JOIN sys_user b
		on a.user_id = b.id_key
		LEFT JOIN sys_community c on a.community_id =
		c.id_key
		LEFT JOIN biz_category d on a.note_type = d.id_key
		<where>
			a.publish_dt between #{params.startDatetime} and
			#{params.endDatetime}
			<if test='params.communityId != -1 and params.communityId !=null'>
				and c.id_key = #{params.communityId}
			</if>
			<if test=' params.communityIds !=null'>
				and c.id_key in <foreach item="item" index="index"  collection="params.communityIds"    open="(" separator="," close=")"> #{params.communityIds[${index}]}</foreach>   
			</if>
		</where>
		order by a.publish_dt desc
	</select>
	<!-- 手机端查询页面 -->
	<select id="queryForMobile" parameterType="Page" resultMap="bizNoteList">
		select a.*, b.cd_nm as user_name, c.cu_name as community_name,
		d.category_name as note_type_name
		from biz_note a
		LEFT JOIN sys_user b
		on a.user_id = b.id_key
		LEFT JOIN sys_community c on a.community_id =
		c.id_key
		LEFT JOIN biz_category d on a.note_type = d.id_key
		<where>
			a.note_type = #{params.noteType} and a.community_id =
			#{params.communityId}
		</where>
		order by a.publish_dt desc
	</select>
	<!-- 手机端查询详细帖子信息 -->
	<select id="queryForDetail" parameterType="java.lang.Long"
		resultMap="bizNoteList">
		select a.*, b.cd_nm as user_name, c.cu_name as community_name,
		d.category_name as note_type_name
		from biz_note a
		LEFT JOIN sys_user b
		on a.user_id = b.id_key
		LEFT JOIN sys_community c on a.community_id =
		c.id_key
		LEFT JOIN biz_category d on a.note_type = d.id_key
		<where>
			a.id_key = #{idKey}
		</where>
	</select>
	<!-- 多行删除 -->
	<delete id="deleteMulti" parameterType="java.util.Map">
		delete from biz_note where id_key in
		<foreach item="item" index="index" collection="deviceIdin"
			open="(" separator="," close=")">${item}</foreach>
	</delete>
	<!-- 手机端查询页面 -->
	<select id="queryForUserNote" parameterType="java.lang.Long"
		resultMap="bizNoteList">
		select a.*, b.cd_nm as user_name, c.cu_name as community_name,
		d.category_name as note_type_name
		from biz_note a
		LEFT JOIN sys_user b
		on a.user_id = b.id_key
		LEFT JOIN sys_community c on a.community_id =
		c.id_key
		LEFT JOIN biz_category d on a.note_type = d.id_key
		<where>
			a.user_id = #{idKey}
		</where>
		order by a.publish_dt desc
	</select>
	<!-- 更新点击数 -->
	<update id="updateStatus" parameterType="java.util.Map">
		update biz_note
		<set>
			<if test="oper == 'clicks'">
				clicks_count = #{clicksCount}
			</if>
			<if test="oper == 'replys'">
				reply_count = #{replysCount},
				last_reply_dt =
				#{lastReplyDt}
			</if>
		</set>
		where id_key = #{idKey}
	</update>
</mapper>