<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dnake.mapper.business.BizShopMapper">
	<resultMap type="BizShop" id="bizShopMap">
		<id column="id_key" property="idKey" />
		<result column="user_id" property="userId" />
		<result column="name" property="name" />
		<result column="telephone" property="telephone" />
		<result column="addr" property="addr" />
		<result column="community_id" property="communityId" />
		<result column="chg_dt" property="chgDt" />
		<result column="is_default" property="isDefault" />
		<result column="status" property="status" />
	</resultMap>

	<resultMap type="BizShopVO" id="bizShopList">
		<id column="id_key" property="idKey" />
		<result column="user_id" property="userId" />
		<result column="name" property="name" />
		<result column="telephone" property="telephone" />
		<result column="addr" property="addr" />
		<result column="community_id" property="communityId" />
		<result column="chg_dt" property="chgDt" />
		<result column="is_default" property="isDefault" />
		<result column="status" property="status" />

		<result column="community_name" property="communityName" />
		<result column="user_name" property="userName" />
	</resultMap>

	<insert id="insert" parameterType="BizShop" useGeneratedKeys="true"
		keyProperty="idKey">
		insert into biz_shop(
		id_key,user_id,name,telephone,addr,community_id,chg_dt,is_default,status)
		values(
		#{idKey},#{userId},#{name},#{telephone},#{addr},#{communityId},#{chgDt},#{isDefault},#{status})
	</insert>

	<delete id="delete" parameterType="java.lang.Long">
		delete from biz_shop where
		id_key=#{idKey}
	</delete>

	<update id="update" parameterType="BizShop">
		update biz_shop
		<set>
			<if test='userId!= null and userId!=""'>
				user_id=#{userId},
			</if>
			<if test='name!= null and name!=""'>
				name=#{name},
			</if>
			<if test='telephone!= null and telephone!=""'>
				telephone=#{telephone},
			</if>
			<if test='addr!= null and addr!=""'>
				addr=#{addr},
			</if>
			<if test='communityId!= null and communityId!=""'>
				community_id=#{communityId},
			</if>
			<if test='chgDt!= null and chgDt!=""'>
				chg_dt=#{chgDt},
			</if>
			<if test='isDefault!= null and isDefault!=""'>
				is_default=#{isDefault},
			</if>
			<if test='status != null and status !=""'>
				status=#{status},
			</if>
		</set>
		where id_key= #{idKey}
	</update>

	<update id="setAllNotDefault" parameterType="java.lang.Long">
		update biz_shop set
		is_default=0 where user_id=#{userId} and is_default=1
	</update>

	<update id="updateMulti" parameterType="java.util.Map">
		update biz_shop set	status=#{status} where id_key in
		<foreach item="item" index="index" collection="idsList"
			open="(" separator="," close=")">${item}</foreach>
	</update>
	
	<select id="queryByIdkey" resultMap="bizShopMap" parameterType="java.lang.Long">
		select * from biz_shop where id_key=#{idKey}
	</select>
	
	<select id="queryByPromotionId" resultMap="bizShopMap"
		parameterType="java.lang.Long">
		select * from biz_shop where
		promotion_id=#{promotion_id}
	</select>
	
	<select id="queryPage" resultMap="bizShopList" parameterType="Page">
		select a.*,b.cd_nm as user_name,c.cu_name as community_name from
		biz_shop a left join sys_user b on a.user_id =b.id_key left join
		sys_community c on c.id_key=a.community_id
		<where>
			<if test='params.communityId != null and params.communityId != "" and params.communityId != "-1"'>
				a.community_id=#{params.communityId}
			</if>
			<if test='params.status != null and params.status != "" and params.status !="-1"'>
				a.status=#{params.status}
			</if>
			<if test='params.userName != null and params.userName != ""'>
				b.cd_nm like CONCAT('%',#{params.userName},'%' )
			</if>
			<if test=' params.communityIds !=null'>
				and a.community_id in <foreach item="item" index="index"  collection="params.communityIds"    open="(" separator="," close=")"> #{params.communityIds[${index}]}</foreach>   
			</if>
		</where>
		order by a.chg_dt desc
	</select>

	<delete id="deleteMulti" parameterType="java.util.Map">
		delete from biz_shop where id_key in
		<foreach item="item" index="index" collection="deviceIdin"
			open="(" separator="," close=")">${item}</foreach>
	</delete>

	<insert id="insertMulti" parameterType="java.util.List">
		insert into biz_shop(
		user_id,name,telephone,addr,community_id,chg_dt,is_default,status)
		values
		<foreach collection="list" item="item" separator="," index="index">
			(#{item.userId},#{item.name},#{item.telephone},#{item.addr},#{item.communityId},#{item.chgDt},#{item.isDefault},#{item.status})
		</foreach>
	</insert>

	<select id="mobileQueryByUserId" resultMap="bizShopList"
		parameterType="java.lang.Long">
		select a.*,b.cu_name as community_name from biz_shop a
		left join sys_community b on a.community_id =b.id_key where
		a.user_id=#{userId} order by a.is_default desc
	</select>
	
	<select id="queryShopByName" resultMap="bizShopList"
		parameterType="java.lang.String">
		select * from biz_shop where name=#{shopName}
	</select>
	
</mapper>
